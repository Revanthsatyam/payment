name: Python application

on:
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: workstation
    steps:
    - uses: actions/checkout@v4
    - name: Test cases
      run: echo Test cases passed
      
  sonarqube-scan:
    needs: test
    runs-on: workstation
    steps:
    - uses: actions/checkout@v4
    
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.1.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
      with:
        args: >
          -Dsonar.projectKey="payment"
          -Dsonar.exclusions=**/Dockerfile
          
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        pollingTimeoutSec: 600
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

  code-security:
    needs: sonarqube-scan
    runs-on: workstation
    steps:
    - uses: actions/checkout@v4

    - name: Code Security
      run: echo Code Security

  push_to_ecr:
    needs: code-security
    runs-on: workstation
    name: Build Docker Images and Push to AWS ECR
    permissions:
      packages: write
      contents: read
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set build number tag
      id: build-number
      run: |
        echo "tag=${{ github.run_number }}" >> $GITHUB_OUTPUT

    - name: Build and push to Amazon ECR
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          058264090525.dkr.ecr.us-east-1.amazonaws.com/payment:${{ steps.build-number.outputs.tag }}
        no-cache: true

  deploy_to_eks:
    needs: push_to_ecr
    runs-on: workstation
    name: Deploy Image to EKS

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Update EKS Kube-Config
      run: |
        aws eks update-kubeconfig --name prod-eks-cluster --region us-east-1

    - name: Checkout APP code
      uses: actions/checkout@v4
      with:
        repository: Revanthsatyam/payment
        path: APP
          
    - name: Checkout CHART code
      uses: actions/checkout@v4
      with:
        repository: Revanthsatyam/roboshop-helm-d76
        path: CHART

    - name: Set build number tag
      id: build-number
      run: |
        echo "tag=${{ github.run_number }}" >> $GITHUB_OUTPUT

    - name: Deploy with Helm
      run: |
        helm upgrade --install payment ./CHART \
          -f APP/helm/prod.yaml \
          --set image_tag=${{ steps.build-number.outputs.tag }}
